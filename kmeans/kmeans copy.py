# -*- coding: utf-8 -*-
"""kmeans.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iQUbnmCfiVcKZL_XISv-Qoo31CKV_xwh
"""

from matplotlib.colors import ListedColormap, LinearSegmentedColormap
from matplotlib import cm
import io
import json
from google.colab import files
import geopandas as gpd
import seaborn as sns
from sklearn.cluster import KMeans
import sklearn
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
pip install - -upgrade geopandas


uploaded = files.upload()

covid = pd.read_csv("Covid.csv", nrows=34)
kepatuhan = pd.read_csv("Kepatuhan.csv")

covid

covid.columns = covid.columns.str.replace(' ', '')

kepatuhan

case = list(covid.Kasus)
kasus = [str.replace(",", "") for str in case]
death = list(covid.Kematian)
kematian = [str.replace(",", "") for str in death]
provinsi = list(covid.ProvinsiAsal)
patuh = list(kepatuhan.Kepatuhan)
todayscase = list(covid.KasusHariini)
todaysdeath = list(covid.MeninggalHariIni)

data = np.column_stack((kasus, kematian))


data[:]

"""KMEANS CLUSTERING"""

kmeans = KMeans(n_clusters=3)
cluster = kmeans.fit_predict(data)
center = kmeans.cluster_centers_
kmeans.n_iter_

patuh = [str.replace(",", ".") for str in patuh]
akhir = np.column_stack((provinsi, cluster, patuh))
akhir = akhir.tolist()
akhir

gabung = np.column_stack((provinsi, cluster))
gabung

final = []
kali = 0
for item in akhir:
    if item[1] == '0':
        kali = 40
    elif item[1] == '1':
        kali = 60
    elif item[1] == '2':
        kali = 80
    final.append((kali*float(item[2]))/100)
final

data_akhir = []
clus = 0
for item in final:
    if float(item) <= 40:
        clus = 0
    elif float(item) <= 60:
        clus = 1
    elif float(item) <= 80:
        clus = 2
    data_akhir.append(clus)
data_final = np.column_stack((provinsi, data_akhir, final))
data_final

data_f = data_final
for x in data_f:
    if x[0] == 'DI Yogyakarta':
        x[0] = "Yogyakarta"
    elif x[0] == 'DKI Jakarta':
        x[0] = 'Jakarta Raya'
df_final = pd.DataFrame(data_f, columns=['Provinsi', 'Cluster', 'Persentase'])
data_final


data_json = './gadm36_IDN_1.json'
df_geo = gpd.read_file(data_json)
display(df_geo)

df_join = df_geo.merge(df_final, how='inner',
                       left_on="NAME_1", right_on="Provinsi")
df_join = df_join[['Provinsi', 'Cluster', 'Persentase', 'geometry']]
df_join

df_join.plot()


N = 256

green = np.ones((N, 4))
green[:, 0] = np.linspace(142/256, 1, N)
green[:, 1] = np.linspace(215/256, 1, N)
green[:, 2] = np.linspace(75/256, 1, N)
green_cmp = ListedColormap(green)

red = np.ones((N, 4))

red[:, 0] = np.linspace(255/256, 1, N)
red[:, 1] = np.linspace(0/256, 1, N)
red[:, 2] = np.linspace(65/256, 1, N)
red_cmp = ListedColormap(red)

yellow = np.ones((N, 4))

yellow[:, 0] = np.linspace(255/256, 1, N)  # R = 255
yellow[:, 1] = np.linspace(232/256, 1, N)  # G = 232
yellow[:, 2] = np.linspace(11/256, 1, N)  # B = 11
yellow_cmp = ListedColormap(yellow)

dt = np.random.random([100, 100]) * 10

newcolors2 = np.vstack((green_cmp(np.linspace(0, 0, 128)),
                        yellow_cmp(np.linspace(0, 0, 128)),
                       red_cmp(np.linspace(0, 0, 128))))
triple = ListedColormap(newcolors2, name='triple')
plt.figure(figsize=(7, 6))
plt.pcolormesh(dt, cmap=triple)
plt.colorbar()

values = 'Cluster'
vmin, vmax = 0, 2
fig, ax = plt.subplots(1, figsize=(30, 10))
ax.axis('off')
title = 'Cluster Tingkat Kemungkinan Tertular per Provinsi di Indonesia'
ax.set_title(title, fontdict={'fontsize': '25', 'fontweight': '3'})
ax.annotate('Source: inta Ristekbrin dan Satgas COVID 19', xy=(0.1, .08),  xycoords='figure fraction',
            horizontalalignment='left', verticalalignment='top', fontsize=12, color='#555555')
sm = plt.cm.ScalarMappable(
    cmap=triple, norm=plt.Normalize(vmin=vmin, vmax=vmax))
cbar = fig.colorbar(sm)
df_join.plot(column=values, cmap=triple, linewidth=0.8, ax=ax,
             edgecolor='0.8', norm=plt.Normalize(vmin=vmin, vmax=vmax))
